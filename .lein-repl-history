(facts)
(load-file "test/simple/polynomial.clj")
(facts)
(load-file "test/simple/polynomial.clj")
(facts)
(load-file "test/simple/polynomial.clj")
(facts)
(load-file "test/simple/polynomial.clj")
(facts)
(merge {:a 1} {:c 2}}
(merge {:a 1} {:c 2})
(load-file "test/simple/polynomial.clj")
(facts)
(load-file "test/simple/polynomial.clj")
(facts)
(load-file "test/simple/polynomial.clj")
(facts)
(load-file "test/simple/polynomial.clj")
(facts)
(load-file "test/simple/polynomial.clj")
(facts)
(load-file "test/simple/polynomial.clj")
(facts)
(load-file "test/simple/polynomial.clj")
(facts)
(load-file "test/simple/polynomial.clj")
(facts)
(load-file "test/simple/polynomial.clj")
(facts)
(load-file "test/simple/polynomial.clj")
(facts)
(load-file "test/simple/polynomial.clj")
(facts)
(load-file "test/simple/polynomial.clj")
(facts)
(load-file "test/simple/polynomial.clj")
(facts)
(load-file "test/simple/polynomial.clj")
(facts)
(load-file "test/simple/polynomial.clj")
(facts)
(load-file "test/simple/polynomial.clj")
(facts)
(:line :a)
(load-file "test/simple/polynomial.clj")
(facts)
(test-library-facts)
(->> [1 2 3] inc inc inc)
(def name "jb")
(load-file "test/simple/polynomial.clj")
(facts)
(->> 1 inc inc)
(load-file "test/simple/polynomial.clj")
(facts)
(load-file "test/simple/polynomial.clj")
(facts)
(source ->>)
(load-file "test/simple/polynomial.clj")
(facts)
(load-file "test/simple/polynomial.clj")
(facts)
(load-file "test/simple/polynomial.clj")
(facts)
(test-library-facts)
(source if-let)
(load-file "test/simple/polynomial.clj")
(exercise-macro)
(load-file "test/simple/polynomial.clj")
(exercise-macro)
(load-file "test/simple/polynomial.clj")
(code-critic (1 + 1) (+ 1 1))
(code-critic (1 + 1))
(code-critic (1 + 1) (1 + 1))
(load-file "test/simple/polynomial.clj")
(code-critic (1 + 1) (1 + 1))
(code-critic (1 + 1))
(code-critic {:good (+ 1 1) :bad (1 + 1)})
(load-file "test/simple/polynomial.clj")
(code-critic (+ 1 1) (1 + 1))
(load-file "test/simple/polynomial.clj")
(code-critic (+ 1 1) (1 + 1))
(load-file "test/simple/macro1.clj")
(code-critic (+ 1 1) (1 + 1))
(load-file "test/simple/macro1.clj")
(code-critic (+ 1 1) (1 + 1))
(load-file "test/simple/macro1.clj")
(code-critic (+ 1 1) (1 + 1))
(load-file "test/simple/macro1.clj")
(code-critic (+ 1 1) (1 + 1))
(load-file "test/simple/macro1.clj")
(code-critic (+ 1 1) (1 + 1))
(load-file "test/simple/macro1.clj")
(code-critic (+ 1 1) (1 + 1))
(load-file "test/simple/macro1.clj")
(code-critic (+ 1 1) (1 + 1))
(code-critic (+ 1 1) (* 1 3))
(load-file "test/simple/macro1.clj")
(code-critic (+ 1 1) (* 1 3))
(load-file "test/simple/macro1.clj")
(code-critic (+ 1 1) (* 1 3))
(load-file "test/simple/macro1.clj")
(code-critic (+ 1 1) (* 1 3))
(load-file "test/simple/macro1.clj")
(code-critic (+ 1 1) (* 1 3))
(load-file "test/simple/macro1.clj")
(code-critic (+ 1 1) (* 1 3))
(load-file "test/simple/macro1.clj")
(preval (+ 1 1) (* 1 3))
(load-file "test/simple/macro1.clj")
(preval (+ 1 1) (* 1 3))
(load-file "test/simple/macro1.clj")
(preval (+ 1 1) (* 1 3))
(load-file "test/simple/macro1.clj")
(preval (+ 1 1) (* 1 3))
(load-file "test/simple/macro1.clj")
(macroexpand [(+ 1 1)])
(macroexpand (+ 1 1))
(macroexpand (evaluate (+ 1 1)))
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
~@:a
~@
~@(+ 1)
~(+ 1)
`(+ 1)
'(+ 1)
`(+ 1)
~(`(+ 1))
~@(`(+ 1))
~@('(+ 1))
~('(+ 1))
~ '(+ 1)
'(+ 1)
~ '(+ 1)
(~'(+ 1))
(~ '(+ 1))
unquote
(unquote 1)
(unquote '1)
 ~(str 1 2 3)
`(~(str 1 2 3))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
g d
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(evaluate (+ 1 1))
(load-file "test/simple/macro1.clj")
(map evaluate [])
(map and [])
(load-file "test/simple/macro1.clj")
(test-library-facts)
(load-file "test/simple/macro1.clj")
(test-library-facts)
(load-file "test/simple/macro1.clj")
(test-library-facts)
(load-file "test/simple/macro1.clj")
(test-library-facts)
(load-file "test/simple/macro1.clj")
(test-library-facts)
(load-file "test/simple/macro1.clj")
(test-library-facts)
(load-file "test/simple/macro1.clj")
(macroexpand (all-truthy? (= 1 2)))
(load-file "test/simple/macro1.clj")
(macroexpand (all-truthy? (= 1 2)))
(macroexpand (and 0 1)))
(macroexpand (and 0 1))
(macroexpand '(and 0 1))
(macroexpand '(all-truthy? (= 1 2)))
(macroexpand '((all-truthy?
    (= false true))
)
(macroexpand '(all-truthy? (= 1 2)))))
(macroexpand '(all-truthy? (= 1 2)))
(all-truthy? (= 1 2))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2))
(macroexpand '(all-truthy? (= 1 2)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2)))
(all-truthy? (= 1 2))
(all-truthy? (= 1 1))
(all-truthy? (= 1 1) (= 1 2))
(all-truthy? (= 1 3) (= 1 2))
(all-truthy? (= 1 1) (= 1 2))
(all-truthy? (= 1 1))
(all-truthy? (= 1 2) (= 1 1))
(test-library-facts)
(macroexpand '(all-truthy? (= 1 2)))
(macroexpand '(all-truthy? (= 1 2) (= 2 3)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 3)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 3)))
(all-truthy? (= 1 2) (= 2 3))
(do (clojure.core/-> {:expression "p1__2081#", :value (= 1 2)} {:expression "p1__2081#", :value (= 2 3)}))
(do (-> {:expression "p1__2081#", :value (= 1 2)} {:expression "p1__2081#", :value (= 2 3)}))
(do (-> {:expression "p1__2081#", :value (= 1 2)}))
(-> {:expression "p1__2081#", :value (= 1 2)})
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 3)))
(all-truthy? (= 1 2) (= 2 3))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 3))
(macroexpand '(all-truthy? (= 1 2) (= 2 3)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 3)))
(all-truthy? (= 1 2) (= 2 3))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 3))
(macroexpand '(all-truthy? (= 1 2) (= 2 3)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 3)))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 3))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 3))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 3))
(macroexpand '(all-truthy? (= 1 2) (= 2 3)))
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(all-truthy? (= 1 2) (= 2 3))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(all-truthy? (= 1 2) (= 2 5))
(source macroexpand)
(source macroexpand-1)
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 5))
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(all-truthy? (= 1 2) (= 2 5))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 5))
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(all-truthy? (= 1 2) (= 2 5))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 5))
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(all-truthy? (= 1 2) (= 2 5))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(all-truthy? (= 1 2) (= 2 5))
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(all-truthy? (= 1 2) (= 2 5))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 5))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(all-truthy? (= 1 2) (= 2 5))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 5))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 5))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 5))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 5))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 5))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 5))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 5))
(evaluate (- 1 2))
(macroexpand '(evaluate (- 1 2)))
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(macroexpand-1 '(all-truthy? (= 1 2) (= 2 5)))
(macroexpand-1 (all-truthy? (= 1 2) (= 2 5)))
(macroexpand-1 '(all-truthy? (= 1 2) (= 2 5)))
(load-file "test/simple/macro1.clj")
(macroexpand-1 '(all-truthy? (= 1 2) (= 2 5)))
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(all-truthy? (= 1 2) (= 2 5))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 5))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 5))
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(all-truthy? (= 1 2) (= 2 5))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 5))
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(map #(evaluate %) (= 1 2) (= 2 5))
(evaluate (= 1 2))
(map #(evaluate %) (= 1 2) (= 2 5))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(all-truthy? (= 1 2) (= 2 5))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 5))
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(map inc 1 2 3)
(map inc (list 1 2 3))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(all-truthy? (= 1 2) (= 2 5))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(all-truthy? (= 1 2) (= 2 5))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 5))
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(all-truthy? (= 1 2) (= 2 5))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 5))
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(all-truthy? (= 1 2) (= 2 5))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 5))
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(all-truthy? (= 1 2) (= 2 5))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 5))
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(all-truthy? (= 1 2) (= 2 5))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 5))
(macroexpand '(all-truthy? (= 1 2) (= 2 5)))
(macroexpand-1 '(all-truthy? (= 1 2) (= 2 5)))
(macroexpand-1 (all-truthy? (= 1 2) (= 2 5)))
(macroexpand '(all-truthy? (-> 1) ))
(macroexpand (all-truthy? (-> 1) ))
(all-truthy? (= 1 2) (= 2 5))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2) (= 2 5))
(all-truthy? (= 1 2))
(macroexpand (all-truthy? (-> 1) ))
(load-file "test/simple/macro1.clj")
(macroexpand (all-truthy? (-> 1) ))
(all-truthy? (= 1 2))
(macroexpand '(all-truthy? (-> 1) ))
(macroexpand '(all-truthy? (-> 1)))
(macroexpand '(all-truthy? (= 2 2)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 2 2)))
(all-truthy? (= 1 2))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2))
(macroexpand '(all-truthy? (= 2 2)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 2 2)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 2 2)))
(all-truthy? (= 1 2))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 2 2)))
(load-file "test/simple/macro1.clj")
(macroexpand '(all-truthy? (= 2 2)))
(all-truthy? (= 1 2))
(load-file "test/simple/macro1.clj")
(all-truthy? (= 1 2))
